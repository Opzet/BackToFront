//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//     Produced by Entity Framework Visual Editor v4.2.8.1
//     Source:                    https://github.com/msawczyn/EFDesigner
//     Visual Studio Marketplace: https://marketplace.visualstudio.com/items?itemName=michaelsawczyn.EFDesigner
//     Documentation:             https://msawczyn.github.io/EFDesigner/
//     License (MIT):             https://github.com/msawczyn/EFDesigner/blob/master/LICENSE
// </auto-generated>
//------------------------------------------------------------------------------

#nullable disable
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using System.Linq;
using System.Runtime.CompilerServices;

namespace Models
{
   public partial class Attributes
   {
      partial void Init();

      /// <summary>
      /// Default constructor
      /// </summary>
      public Attributes()
      {
         Init();
      }

      /// <summary>
      /// Public constructor with required data
      /// </summary>
      /// <param name="product"></param>
      /// <param name="attributekeys"></param>
      public Attributes(global::Models.Product product, global::Models.AttributeKeys attributekeys)
      {
         if (product == null) throw new ArgumentNullException(nameof(product));
         this.Product = product;
         product.Attributes.Add(this);

         if (attributekeys == null) throw new ArgumentNullException(nameof(attributekeys));
         this.AttributeKeys = attributekeys;
         attributekeys.Attributes.Add(this);

         Init();
      }

      /// <summary>
      /// Static create function (for use in LINQ queries, etc.)
      /// </summary>
      /// <param name="product"></param>
      /// <param name="attributekeys"></param>
      public static Attributes Create(global::Models.Product product, global::Models.AttributeKeys attributekeys)
      {
         return new Attributes(product, attributekeys);
      }

      /*************************************************************************
       * Properties
       *************************************************************************/

      /// <summary>
      /// Identity, Indexed, Required
      /// Unique identifier
      /// </summary>
      [Key]
      [Required]
      [System.ComponentModel.Description("Unique identifier")]
      public long Id { get; set; }

      public string Name { get; set; }

      /*************************************************************************
       * Navigation properties
       *************************************************************************/

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Models.AttributeKeys AttributeKeys { get; set; }

      /// <summary>
      /// Required
      /// </summary>
      public virtual global::Models.Product Product { get; set; }

   }
}

